"""
    In this exercise you start out by having a list of names, and a list of majors.
    Your job is to create:
    1. A list of dictionaries of students 
        (ie: students = [{'id': 1,'name': 'Claus', 'major': 'Math'}])
        cretated in a normal function that returns the result
    2. A Generator that "returns" a generator object. So the student is yield instead of returned.

    Both functions should do the same, but one returns a list and one a generator object.

    students = [{'id': 1,'name': 'Clasu', 'major': 'Math'}]
    The id could be generated by a counter or like in a loop. 
    The Name should be found by randomly chosing a name from the names list
    The Major should be found by randomly chosing a major from the major list

    You should time each function like we did last time with the decorator function "timer".
    https://github.com/python-elective-1-spring-2019/Lesson-19-property-protocols-arg-in-generator/blob/master/code_from_today/exercise_timer.py


    Wich one is the fastes? and why?

"""

names = ['John', 'Corey', 'Adam', 'Steve', 'Rick', 'Thomas']
majors = ['Math', 'Engineering', 'CompSci', 'Arts', 'Business']

def students_list(num_students):
    pass

def students_generator(num_students):
    pass

people = students_list(1000000)
people = students_generator(1000000)
